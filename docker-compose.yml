version: "2.3"

#networks:
#  ros_network:
#    driver: bridge
    
services:

    ros-master:
#        build: ./docker/master
        image: wn1980/w-ros-master${tag}
        container_name: ros_master
        restart: unless-stopped
        command: stdbuf -o L roslaunch start.launch
        volumes:
           - "/etc/localtime:/etc/localtime:ro"
        ports:
           - "9090:9090"
           - "11311:11311"
#        networks:
#           - ros_network

    ros-joystick:
#        build: ./docker/joystick
        image: wn1980/w-ros-joystick${tag}
        depends_on:
            - ros-master
        container_name: ros_joystick
        restart: unless-stopped
        privileged: true
        command: stdbuf -o L roslaunch --wait start.launch
#        command: stdbuf -o L roslaunch --wait turtlebot_lidar_teleop joystick.launch
#        command: stdbuf -o L roslaunch --wait teleop_twist_joy teleop.launch
        devices:
            - "/dev/input:/dev/input"
        volumes:
            - "/dev/input:/dev/input"
            - "/etc/localtime:/etc/localtime:ro"
        environment:
            - "ROS_MASTER_URI=http://ros-master:11311"
            
    ros-webui:
#        build: ./docker/robot
        image: wn1980/w-ros-d${tag}
        depends_on:
            - ros-master
        container_name: ros_webui
        hostname: ros-webui
        restart: unless-stopped
        privileged: true
        command: startup.sh
        devices:
            - "/dev:/dev"
        volumes:
            - "${PWD}/Documents:/home/${user}/Documents:rw"
            - "${PWD}/catkin_ws:/home/${user}/catkin_ws:rw"
            - "${PWD}/config/wmx:/home/${user}/.wmx:rw"
            - "${PWD}/config/asoundrc.txt:/home/${user}/.asoundrc:rw"
            - "${PWD}/config/one-dark-Xresources.txt:/home/${user}/.Xresources:rw"
            - "/dev:/dev" 
            - "/run/systemd:/run/systemd"
            - "/etc/localtime:/etc/localtime:ro"
#            - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
        environment:
            - "VNC_PASSWORD=${vnc_password}"
            - "VNC_RESOLUTION=${vnc_resolution}"
            - "ROS_MASTER_URI=http://ros-master:11311"
            - "TURTLEBOT_MAP_FILE=/home/rosuser/Documents/map.yaml"
            - "NVIDIA_VISIBLE_DEVICES=all"
            - "GAZEBO_MASTER_URI=http://localhost:11345"
#            - "ROS_HOSTNAME=ros-novnc"
#            - "ROS_IP=172.18.0.3"
        ports:
            - "5901:5901"
            - "6901:6901"
            - "11345:11345"
#        networks:
#            - ros_network
        runtime: "${runtime}"

    gzweb:
#        build: ./docker/master
        image: wn1980/gzweb${tag}
        depends_on:
            - ros-webui        
        container_name: gzweb
        restart: unless-stopped
#        command: stdbuf -o L bash -c "export GAZEBO_MASTER_URI=http://ros-webui:11345 && gzserver --verbose && npm start -p 7681"
        command: stdbuf -o L bash -c "npm start -p 7681"
        volumes:
           - "/etc/localtime:/etc/localtime:ro"
        environment:
           - "GAZEBO_MASTER_URI=http://ros-webui:11345"
        ports:
           - "7681:7681"
